import numpy as np
from scipy.interpolate import UnivariateSpline
import matplotlib.pyplot as plt

# Dados originais (não logarítmicos!)
X_DATA = np.array([
    0.0019306977288832496, 0.0021928747399631828, 0.0025712141464285625,
    0.003046989570903508, 0.0034607522259998465, 0.003930701333582669,
    0.004512091314336601, 0.005179474679231213, 0.006073095888063095,
    0.0071208946755741895, 0.008528557386046992, 0.010214487701467307,
    0.011976805969762905, 0.013894954943731374, 0.01612030564540799,
    0.018702058060188872, 0.021241683818230137, 0.02412617531084188,
    0.027402363207662817, 0.031455446376766, 0.03572690471530962,
    0.042337782801723636, 0.04859996367971544, 0.0551995432128157,
    0.06336410689816542, 0.0735122045579249, 0.08261343710999333,
    0.09284145445194744, 0.10214487701467312, 0.11479099863901436,
    0.12764117205368128, 0.14192984638518655, 0.15781805330376297,
    0.17179995331294348, 0.18901562029448687, 0.2124168381823014,
    0.23871526106185034, 0.2682695795279725, 0.3014828921284107,
    0.3424224355729867, 0.3848162970540386, 0.43245876173560044,
    0.48599963679715436
])

Y_DATA = np.array([
    0.0019101354890282004, 0.0019101354890282004, 0.001947395440693419,
    0.0019662970902942483, 0.001985382201533208, 0.002043756198667801,
    0.002063593137139315, 0.0021242666839160085, 0.0021242666839160085,
    0.002186724147886555, 0.002272866625333268, 0.0023396932090369305,
    0.0024554655921590913, 0.0025521947061619595, 0.00265273430788889,
    0.0027839965483518756, 0.002865851319896976, 0.003007658987541932,
    0.0031871207644077167, 0.0033126722560456933, 0.00347658945685808,
    0.003719789142440212, 0.0040186318667113355, 0.0042997493292655075,
    0.004690271969670726, 0.00506708194446123, 0.005527297196227699,
    0.0059139511158010525, 0.0063276528397919925, 0.006836007733167704,
    0.0072439004163289515, 0.007825865375058938, 0.008373312239936237,
    0.00870316539561667, 0.009222468126652231, 0.009585772411452392,
    0.0100600943062436, 0.010355880133150332, 0.010763833359291333,
    0.010973797475974866, 0.011080310447273338, 0.011187857246021206,
    0.011296447906669511
])

# Pré-processamento para garantir ordem crescente
sorted_idx = np.argsort(X_DATA)
X_CLEAN = X_DATA[sorted_idx]
Y_CLEAN = Y_DATA[sorted_idx]

# Spline em espaço log-log
log_x = np.log(X_CLEAN)
log_y = np.log(Y_CLEAN)
spline = UnivariateSpline(log_x, log_y, k=3, s=0.001)

def compute_nlc(x):
    if x < X_CLEAN[0]:
        return 0.001873
    elif x > X_CLEAN[-1]:
        return 0.0113
    return np.exp(spline(np.log(x)))

# Geração de dados de teste (foco na região relevante)
x_values = np.logspace(
    np.log10(X_CLEAN[0]), 
    np.log10(X_CLEAN[-1]), 
    1000
)

nlc_values = [compute_nlc(x) for x in x_values]

# Plotagem em escala logarítmica
plt.figure(figsize=(10, 6))
plt.plot(x_values, nlc_values, label="Spline log-log", color='blue')
plt.scatter(X_CLEAN, Y_CLEAN, color='red', label="Dados Originais")
plt.xscale('log')
plt.yscale('log')
plt.xlabel("x (Escala Logarítmica)")
plt.ylabel("Nlc")
plt.legend()
plt.title("Interpolação Spline em Espaço Log-Log")
plt.grid(True, which='both', linestyle='--')
plt.show()